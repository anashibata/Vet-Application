@model IEnumerable<Argus.Models.ExameFisicoItem>

@{
    WebGrid grid = new WebGrid(source: Model, selectionFieldName: "SelectedRow", rowsPerPage: 20);
}
<script src="@Url.Content("~/Scripts/jquery.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.tabify.js")" type="text/javascript"></script>
<script src="../../Scripts/FuncoesGenericas.js" type="text/javascript"></script>
<link href="../../Content/webgrid.css" rel="stylesheet" type="text/css" />

<table>
    <tr>
        <td>
            @using (Html.BeginForm("Listar","ExameFisicoItem"))
            {
                @Html.DisplayText("Informe o Item para realizar o Exame Fisico:")
                @Html.TextBox("pesquisa", "") 
                <input type="submit" value="Pesquisar" />
            }
        </td>
        <td  width="20%" align="center">
            @Html.ActionLink("Incluir", "Incluir", new { codigoexamefisico = ViewBag.codigoexameFisicoItem })
        </td>
    </tr>
    <tr>
    <td colspan="2" width="100%">
        @grid.GetHtml(
            tableStyle: "webgrid",
            headerStyle: "webgrid-header",
            footerStyle: "webgrid-footer",
            alternatingRowStyle: "webgrid-alternating-row",
            selectedRowStyle: "webgrid-selected-row",
            rowStyle: "webgrid-row-style",
            mode: WebGridPagerModes.FirstLast | WebGridPagerModes.NextPrevious,
            firstText: "Primeiro",
            previousText: "Anterior",
            nextText: "Próximo",
            lastText: "Último",        
            columns: grid.Columns(
                     grid.Column("EXAME", header: "Exame", format: @<text><div class="colunanome">@item.ExameFisico.NOME</div></text>),
                         grid.Column("NOME", header: "Nome", format: @<text><div class="colunanome">@item.NOME</div></text>),
                         grid.Column("Editar", header: "Editar", format: @<text><div class="colunanome">@Html.ActionLink("Editar", "Editar", new { codigo = item.CODIGO})</div></text>, canSort: false),
                         grid.Column("Eliminar", header: "Eliminar", format: @<text><div class="colunanome">@Html.ActionLink("Eliminar", "Eliminar", new { codigo = item.CODIGO})</div></text>, canSort: false)    
        )
    )
    </td>
    </tr>
</table>
<div>
    <br /><br />
    @Html.ActionLink("Voltar a Listagem de exames", "ListarExames")
</div>
